version: '3'
services:
  unifi_controller:
    image: linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=987
      - PGID=114
    networks:
      - web
      - default
    volumes:
      - /media/server/config/unifi_controller:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789
    restart: unless-stopped
  vpn:
    image: dperson/openvpn-client
    container_name: openvpn
    cap_add:
      - net_admin
    security_opt:
      - label:disable
    environment:
      TZ: Europe/Berlin
    networks:
      - default
    read_only: true
    tmpfs:
      - /run
      - /tmp
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - /dev/net:/dev/net:z
      - ${CONF_DIR}/openvpn:/vpn
    ports:
      - "8680:8080" # SABNZBD
      - "9090:9090" # SABNZBD
    command: "-r 192.168.1.0/24"
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    depends_on:
      - vpn
    environment:
      TZ: "Europe/Berlin"
      PUID: 997
      PGID: 114
    volumes:
      - ${CONF_DIR}/sonarr:/config
      - tvshows:/tv
      - downloads:/downloads
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    depends_on:
      - vpn
    environment:
      TZ: "Europe/Berlin"
      PUID: 993
      PGID: 114
    volumes:
      - ${CONF_DIR}/radarr:/config
      - movies:/movies
      - downloads:/downloads
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    restart: unless-stopped
    ports:
      - 8181:8181
    environment:
      TZ: "Europe/Berlin"
      PUID: 992
      PGID: 114
    volumes:
      - ${CONF_DIR}/tautulli:/config
  heimdall :
    image: linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    ports:
      - 8090:80
      - 8043:443
    networks:
      - web
      - default
    environment:
      TZ: "Europe/Berlin"
      PUID: 991
      PGID: 114
    volumes:
      - ${CONF_DIR}/heimdall:/config
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    network_mode: "service:vpn"
    restart: unless-stopped
    depends_on:
      - vpn
    environment:
      TZ: "Europe/Berlin"
      VERSION: latest
      PUID: 995
      PGID: 114
    volumes:
      - ${CONF_DIR}/sabnzbd:/config
      - movies:/movies
      - downloads:/downloads
  unifi_nvr:
    image: pducharme/unifi-video-controller
    container_name: unifi_nvr
    restart: unless-stopped
    networks:
      - web
      - default
    environment:
      PUID: 989
      PGID: 114
    volumes:
      - '${UNIFI_CONFIG_DIR}:/var/lib/unifi-video'
      - '${UNIFI_VIDEO_DIR}:/var/lib/unifi-video/videos'
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - apparmor:unconfined
    ports:
     - "10001:10001"
     - "1935:1935"
     - "6666:6666"
     - "7004:7004"
     - "7080:7080"
     - "7442:7442"
     - "7443:7443"
     - "7444:7444"
     - "7445:7445"
     - "7446:7446"
     - "7447:7447"
  deconz:
    image: marthoc/deconz
    container_name: deconz_service
    restart: unless-stopped
    ports:
      - "40850:40850"
      - "40860:40860"
      - "40870:40870"
    volumes:
      - ${DECONZ_CONFIG_DIR}:/root/.local/share/dresden-elektronik/deCONZ
    devices:
      - /dev/ttyACM0
    environment:
      - DECONZ_WEB_PORT=40850
      - DECONZ_WS_PORT=40860
      - DECONZ_VNC_MODE=1
      - DECONZ_VNC_PORT=40870
      - DECONZ_VNC_PASSWORD=geheim123
      - DEBUG_INFO=1
      - DEBUG_APS=1
      - DEBUG_ZCL=1
      - DEBUG_ZDP=1
      - DEBUG_OTAU=1
      - DECONZ_DEVICE=/dev/ttyACM0
  facebox:
    image: machinebox/facebox_noavx
    container_name: facebox
    restart: unless-stopped
    networks:
      - web
    expose:
      - 8080
    environment:
      - MB_KEY=ZDRjZWIwMmFmZjkzZTgyNDk4ZjVhMTdjOWQxNzhjNGQ.FsDTi-L0HnaIEsDv993cKDOmW-8P9MIqbV-KO3iZgqI5Gb-pGa3Kqy0IpmTOHt2uYxrGRROPrn_pwWQ0i-U4mg
      - MB_FACEBOX_DISABLE_RECOGNITION=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.facebox.rule=Host(`facebox.janz.digital`)"
      - "traefik.http.routers.facebox.entrypoints=websecure"
      - "traefik.http.routers.facebox.tls.certresolver=mytlschallenge"
  traefik:
    image: traefik:v2.0.0-rc3
    container_name: traefik
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=janz.jonas@gmail.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: always
    ports:
      - 8456:8080
      - 443:443
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONF_DIR}/traefik:/letsencrypt
  bitwarden:
    image: bitwardenrs/server
    container_name: bitwarden
    restart: unless-stopped
    networks:
      - web
    expose:
      - "80"
    environment:
      WEBSOCKET_ENABLED: "true"
      ADMIN_TOKEN: ${BITWARDEN_ADMIN_TOKEN}
      SIGNUPS_ALLOWED: "true"
    volumes:
      - ${CONF_DIR}/bitwarden/:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bitwarden.rule=Host(`bitwarden.janz.digital`)"
      - "traefik.http.routers.bitwarden.entrypoints=websecure"
      - "traefik.http.services.bitwarden.loadbalancer.server.port=80"
      - "traefik.http.routers.bitwarden.tls.certresolver=mytlschallenge"


networks:
  default:
  web:
    external: true

volumes:
  tvshows:
    driver: local
    driver_opts:
      type: none
      device: ${TVSHOW_DIR}
      o: bind
  movies:
    driver: local
    driver_opts:
      type: none
      device: ${MOVIE_DIR}
      o: bind
  downloads:
    driver: local
    driver_opts:
      type: none
      device: ${DOWNLOAD_DIR}
      o: bind
  incomplete_downloads:
    driver: local
    driver_opts:
      type: none
      device: ${DOWNLOAD_DIR}/incomplete
      o: bind